{"version":3,"sources":["pages/algorithms/graph/bfsVsDfs.scss","components/buttons/primary/primiaryButton.scss","components/grids/general/generalGrid.scss","components/buttons/primary/PrimaryButton.js","components/grids/general/GeneralGrid.js","components/selects/general/GeneralSelect.js","pages/algorithms/graph/BFSvsDFS.js","App.js","serviceWorker.js","redux/ReduxConstants.js","redux/reducers/index.js","redux/reducers/DevReducer.js","index.js","redux/Store.js"],"names":["module","exports","PrimaryButton","title","loading","styleProps","onClick","useState","opacity","setOpacity","btnStyles","containerStyle","className","styles","style","onMouseOver","onMouseOut","disabled","defaultProps","GeneralGrid","rows","cols","gridStyles","blocked","searched","path","cellStyle","rowsHelper","colsHelper","gridTemplateRows","gridTemplateColumns","push","display","gridRowGap","gridColumnGap","map","_","rowIndex","colIndex","isBlocked","filter","e","x","y","length","isSearched","isPath","maxDepth","depth","searchedDepth","key","borderStyle","borderColor","borderWidth","height","Math","max","width","backgroundColor","alignItems","justifyContent","GeneralSelect","items","onChange","selectedIndex","handleChange","index","target","value","item","BFSvsDFS","setSearched","setBlocked","bfsTitle","setBfsTitle","dfsTitle","setDfsTitle","bfsComplete","setBfsComplete","dfsComplete","setDfsComplete","setRows","setCols","selectedRows","setSelectedRows","selectedCols","setSelectedCols","range","res","i","useEffect","threshold","ceil","parseInt","random","blockInit","start","type","reset","queue","directions","current","shift","forEach","direction","nextX","nextY","nextDepth","isVisited","unshift","routes","bfs_vs_dfs","App","exact","component","Boolean","window","location","hostname","match","ReduxConstants","DEV","CHECK_DATA","dev","state","action","Object","assign","data","ReactDOM","render","store","initialState","isDebugMode","reducer","combineReducers","reducers","finalCreateStore","applyMiddleware","thunkMiddleware","createStore","composeWithDevTools","configureStore","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.92ff2d4a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page-container\":\"_2SH-2jkkPnx1zgrSANfnRk\",\"design-buttons-container\":\"_3rPsjQCevdiZfgsOwLMDGj\",\"main-container\":\"_3RU4b1olw83kAr0Pi6LjwX\",\"start-buttons-container\":\"_2o1zKn7vANimmhAJGeyaXf\",\"result-container\":\"_1PzDN-zoQimaOCzHC3EL8x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cmpt-container\":\"_30vlMgIBG0hACwtAek046o\",\"btn-style\":\"_3p7ghl7DTIvF6cxVG0Pw9e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cmpt-container\":\"_3Z8jaJAaJJCTtmw05zdjTc\"};","import React, { useState } from 'react';\nimport styles from './primiaryButton.scss';\nimport PropTypes from 'prop-types';\n\nconst PrimaryButton = ({ title, loading, styleProps, onClick }) => {\n\n  const [ opacity, setOpacity ] = useState(1);\n\n  const { btnStyles, containerStyle } = styleProps;\n\n  return (\n    <div className={`${styles['cmpt-container']} ${containerStyle || ''}`}>\n      <button\n        style={{ opacity }}\n        className={`${styles['btn-style']} ${btnStyles || ''}`}\n        onMouseOver={() => setOpacity(0.8)}\n        onMouseOut={() => setOpacity(1)}\n        disabled={loading}\n        onClick={onClick}\n      >\n        {title}\n      </button>\n\n    </div>\n  )\n}\n\n\nPrimaryButton.defaultProps = {\n  title: '',\n  loading: false,\n  styleProps: {},\n  onClick: () => {}\n}\n\nPrimaryButton.propTypes = {\n  title: PropTypes.string,\n  loading: PropTypes.bool,\n  styleProps: PropTypes.object,\n  onClick: PropTypes.func\n}\n\nexport default PrimaryButton;","import React, { useEffect } from 'react';\nimport styles from './generalGrid.scss';\nimport PropTypes from 'prop-types';\n\nconst GeneralGrid = ({ rows, cols, gridStyles, blocked, searched, path }) => {\n\n  const { cellStyle, containerStyle } = gridStyles;\n\n  const rowsHelper = [];\n  const colsHelper = [];\n  let gridTemplateRows = `repeat(${rows}, 1fr)`;\n  let gridTemplateColumns = `repeat(${cols}, 1fr)`;\n  while (rows-- !== 0) { \n    rowsHelper.push('');\n  };\n  while (cols-- !== 0) { \n    colsHelper.push('');\n  };\n\n  return (\n    <div \n      className={`${styles['cmpt-container']} ${containerStyle || ''}`}\n      style={{\n        display: 'grid',\n        gridTemplateRows,\n        gridTemplateColumns,\n        gridRowGap: '2px',\n        gridColumnGap: '2px'\n      }}\n    >\n      {\n        rowsHelper.map((_, rowIndex) => {\n          return colsHelper.map((_, colIndex) => {\n            const isBlocked = blocked.filter((e) => e.x === rowIndex && e.y === colIndex).length > 0;\n            const isSearched = searched.filter((e) => e.x === rowIndex && e.y === colIndex).length > 0;\n            const isPath = path.filter((e) => e.x === rowIndex && e.y === colIndex).length > 0;\n            const maxDepth = searched.length > 0 && searched[searched.length - 1].depth;\n            let searchedDepth = 0;\n            if (isSearched) {\n              searchedDepth = searched.filter((e) => e.x === rowIndex && e.y === colIndex)[0].depth;\n            }            \n            return (\n              <div \n                key={`${rowIndex}-${colIndex}`}\n                className={`${styles['cell-container']} ${cellStyle || ''}`}\n                style={{\n                  borderStyle: 'solid',\n                  borderColor: 'black',\n                  borderWidth: '1px',\n                  height: `calc(600px / ${Math.max(rowsHelper.length, colsHelper.length)})`,\n                  width: `calc(600px / ${Math.max(rowsHelper.length, colsHelper.length)})`,\n                  backgroundColor: isBlocked ? 'gray' : isPath ? 'blue' : isSearched ? `rgba(255,123,123, ${searchedDepth / maxDepth})` : 'white',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center'\n                }}\n              />\n            )\n          })\n        })\n      }\n    </div>\n  )\n}\n\nGeneralGrid.defaultProps = {\n  rows: 0,\n  cols: 0,\n  gridStyles: {},\n  blocked: [],\n  searched: [],\n  path: []\n}\n\nGeneralGrid.propTypes = {\n  rows: PropTypes.number.isRequired,\n  cols: PropTypes.number.isRequired,\n  gridStyles: PropTypes.object,\n  blocked: PropTypes.array,\n  searched: PropTypes.array,\n  path: PropTypes.array\n}\n\nexport default GeneralGrid;","import React, { useState } from 'react';\nimport styles from './generalSelect.scss';\nimport PropTypes from 'prop-types';\n\nconst GeneralSelect = ({ items, onChange, selectedIndex }) => {\n\n  const handleChange = (index) => {\n    onChange(index);\n  }\n\n  return (\n    <div className={styles['cmpt-container']}>\n      <select onChange={(e) => handleChange(e.target.value)} value={selectedIndex}>\n        {\n          items.map((item, index) => {\n            return (\n              <option value={`${index}`} key={index}>{item}</option>\n            )\n          })\n        }\n      </select>\n    </div>\n  )\n}\n\nGeneralSelect.defaultProps = {\n  items: ['default'],\n  onChange: () => {},\n  selectedIndex: 0,\n}\n\nGeneralSelect.propTypes = {\n  items: PropTypes.array,\n  onChange: PropTypes.func,\n  selectedIndex: PropTypes.string\n}\n\nexport default GeneralSelect;","import React, { useState, useEffect } from 'react';\nimport styles from './bfsVsDfs.scss';\nimport PrimaryButton from '../../../components/buttons/primary/PrimaryButton';\nimport GeneralGrid from '../../../components/grids/general/GeneralGrid';\nimport GeneralSelect from '../../../components/selects/general/GeneralSelect';\n\nconst BFSvsDFS = () => {\n\n  const [ searched, setSearched ] = useState([]);\n  const [ blocked, setBlocked ] = useState([]);\n  const [ bfsTitle, setBfsTitle ] = useState('Breadth');\n  const [ dfsTitle, setDfsTitle ] = useState('Depth');\n  const [ bfsComplete, setBfsComplete ] = useState(false);\n  const [ dfsComplete, setDfsComplete ] = useState(false);\n  const [ rows, setRows ] = useState(5);\n  const [ cols, setCols ] = useState(5);\n  const [ selectedRows, setSelectedRows ] = useState(4);\n  const [ selectedCols, setSelectedCols ] = useState(4);\n\n  const range = () => {\n    const res = [];\n    for(let i = 1; i <= 20; i += 1) {\n      res.push(i);\n    }\n    return res;\n  }\n\n  useEffect(() => {\n    const threshold = Math.ceil(rows * cols * 0.3);\n    const blocked = [];\n    const blockInit = () => {\n      while (blocked.length < threshold) {\n        const x = parseInt(Math.random() * rows);\n        const y = parseInt(Math.random() * cols);\n        if ((x === 0 && y === 0) || (x === rows - 1 && y === cols - 1) || blocked.filter((e) => e.x === x && e.y === y).length > 0) {\n          continue;\n        }\n        blocked.push({ x, y });\n      }\n      setBlocked(blocked);\n    }\n    blockInit();\n  }, [])\n\n  const getBlocks = () => {\n    reset();\n    const threshold = Math.ceil(rows * cols * 0.3);\n    const blocked = [];\n    while (blocked.length < threshold) {\n      const x = parseInt(Math.random() * rows);\n      const y = parseInt(Math.random() * cols);\n      if ((x === 0 && y === 0) || (x === rows - 1 && y === cols - 1) || blocked.filter((e) => e.x === x && e.y === y).length > 0) {\n        continue;\n      }\n      blocked.push({ x, y });\n    }\n    setBlocked(blocked);\n  }\n\n  const start = (type) => {\n    reset();\n    const queue = [];\n    const searched = [];\n    const directions = [{ x: 1, y: 0 }, { x: -1, y: 0 }, { x: 0, y: 1 }, { x: 0, y: -1 }];\n    queue.push({ x: 0, y: 0, depth: 0, type });\n    searched.push({ x: 0, y: 0, depth: 0, type });\n\n    while (queue.length > 0) {\n      const current = queue.shift();\n      if (current.x === rows - 1 && current.y === cols - 1) {\n        break;\n      }\n\n      directions.forEach((direction) => {\n        const nextX = current.x + direction.x;\n        const nextY = current.y + direction.y;\n        const nextDepth = current.depth + 1;\n        const isVisited = searched.filter((e) => e.x === nextX && e.y === nextY).length > 0;\n        const isBlocked = blocked.filter((e) => e.x === nextX && e.y === nextY).length > 0;\n        if (nextX >= 0 && nextX < rows && nextY >= 0 && nextY < cols && !isVisited && !isBlocked) {\n          if (type === 'bfs') {\n            queue.push({ x: nextX, y: nextY, depth: nextDepth, type });\n          } else if (type === 'dfs') {\n            queue.unshift({ x: nextX, y: nextY, depth: nextDepth, type });\n          }\n          searched.push({ x: nextX, y: nextY, depth: nextDepth, type });\n        }\n      });\n      setSearched(searched);\n    }\n\n    if (type === 'bfs') {\n      setBfsComplete(true);\n    } else if (type === 'dfs') {\n      setDfsComplete(true);\n    }\n\n  }\n\n\n  const reset = () => {\n    setSearched([]);\n    setBfsTitle('Breadth');\n    setDfsTitle('Depth');\n    setBfsComplete(false);\n    setDfsComplete(false);\n  }\n\n  return (\n    <div className={styles['page-container']}>\n      <div className={styles['design-buttons-container']}>\n        <PrimaryButton\n          title={'Reset'}\n          onClick={reset}\n        />\n        <PrimaryButton\n          title={'Generate blocks'}\n          onClick={getBlocks}\n        />\n        <GeneralSelect\n          items={range()}\n          selectedIndex={`${selectedRows}`}\n          onChange={(index) => {\n            setBlocked([]);\n            reset();\n            setRows(range()[index]);\n            setSelectedRows(index);\n          }}\n        />\n        <GeneralSelect\n          items={range()}\n          selectedIndex={`${selectedCols}`}\n          onChange={(index) => {\n            setBlocked([]);\n            reset();\n            setCols(range()[index]);\n            setSelectedCols(index);\n          }}\n        />\n      </div>\n      <div className={styles['main-container']}>\n        <div className={styles['start-buttons-container']}>\n          <PrimaryButton\n            title={bfsTitle}\n            onClick={() => start('bfs')}\n          />\n          <PrimaryButton\n            title={dfsTitle}\n            onClick={() => start('dfs')}\n          />\n          <div className={styles['result-container']}>\n            {\n              bfsComplete &&\n              <div>{`BFS complete, after searching ${searched.length} blocks`} </div>\n            }\n            {\n              dfsComplete &&\n              <div>{`DFS complete, after searching ${searched.length} blocks`} </div>\n            }\n          </div>\n        </div>\n        <GeneralGrid\n          rows={rows}\n          cols={cols}\n          blocked={blocked}\n          searched={searched}\n        />\n      </div>\n    </div>\n  )\n\n}\n\nexport default BFSvsDFS;","import React from 'react';\nimport BFSvsDFS from './pages/algorithms/graph/BFSvsDFS';\nimport { Route, Switch } from 'react-router-dom';\n\nconst App = () => {\n\n  return (\n    <Switch>\n      <Route path={routes.bfs_vs_dfs} exact component={BFSvsDFS} />\n    </Switch>\n  )\n\n}\n\nconst routes = {\n  bfs_vs_dfs: '/bfs-vs-dfs'\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const ReduxConstants = {\n  DEV: {\n    CHECK_DATA: 'DEV_CHECK_DATA',\n  }\n}\n\nexport default ReduxConstants;","import DevReducer from './DevReducer';\nexport default {\n  dev: DevReducer\n}","import ReduxConstants from '../ReduxConstants';\n\nexport default function DevReducer(state={}, action={}) {\n  switch (action.type) {\n    case ReduxConstants.DEV.CHECK_DATA:\n      return Object.assign({}, state, {\n        data: action.data\n      });\n    default:\n      return {}\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/Store';\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <BrowserRouter>\n      <Switch>\n        <App />\n      </Switch>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport reducers from './reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunkMiddleware from 'redux-thunk';\n\nexport default function configuteStore(initialState={}) {\n  const isDebugMode = !(process.env.NODE_ENV && process.env.NODE_ENV === 'production');\n  const reducer = combineReducers({ ...reducers });\n  let finalCreateStore = applyMiddleware(thunkMiddleware)(createStore);\n  if (isDebugMode) {\n    finalCreateStore = composeWithDevTools(applyMiddleware(thunkMiddleware))(createStore);\n  }\n  return finalCreateStore(reducer, initialState);\n}\n\n\n"],"sourceRoot":""}